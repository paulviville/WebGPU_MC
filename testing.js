console.log("testing");

// const INTMAX = 123456789;

// const nbEdges = 100;
// const activeEdgeBuffer = new Array(nbEdges);
// for(let i = 0; i < activeEdgeBuffer.length; ++i) {
//     activeEdgeBuffer[i] = Math.random() > 0.75 ? i : null;
// }
// console.log(activeEdgeBuffer)

// console.table(activeEdgeBuffer)

// const chunkSize = 16;
// const nbChunks = Math.ceil(nbEdges / chunkSize);
// const activePerChunkBuffer = new Array(nbChunks);
// console.log(nbChunks, nbChunks * chunkSize)


// const activeEdgeOffsetBuffer = new Array(nbEdges);
// for(let ch = 0; ch < nbChunks; ++ch) {
//     const chunkOffset = ch * chunkSize;
//     let subOffset = 0;
//     for(let i = 0; i < chunkSize; ++i) {
//         const e = chunkOffset + i;
//         if(e >= nbEdges)
//             continue;

//         if(activeEdgeBuffer[e]) {
//             activeEdgeOffsetBuffer[e] = subOffset++;
//         } else {
//             activeEdgeOffsetBuffer[e] = null;
//         }
//     }

//     activePerChunkBuffer[ch] = subOffset;
// }

// console.table([activeEdgeBuffer, activeEdgeOffsetBuffer])
// console.table(activePerChunkBuffer)
// const chunkOffsetBuffer = new Array(nbChunks);
// chunkOffsetBuffer[0] = 0;
// for(let ch = 1; ch < nbChunks + 1; ++ch) {
//     chunkOffsetBuffer[ch] = chunkOffsetBuffer[ch - 1] + activePerChunkBuffer[ch - 1];
// }

// console.table([activePerChunkBuffer, chunkOffsetBuffer])


// const vertexBuffer = new Array((nbEdges))
// console.log(vertexBuffer.length)

// for(let i = 0; i < activeEdgeBuffer.length; ++i) {
//     const ch = Math.floor(i / chunkSize);
//     const chunkOffset = chunkOffsetBuffer[ch];
//     if(activeEdgeBuffer[i]) {
//         const edgeOffset = activeEdgeOffsetBuffer[i];
//         const vertex = chunkOffset + edgeOffset;
//         console.log(vertex)
//         activeEdgeBuffer[i] = vertex
//         vertexBuffer[vertex] = (vertexBuffer[vertex] ?? 0) +1;
//     }
// }
// console.table(vertexBuffer);
// console.table([activeEdgeBuffer, activeEdgeOffsetBuffer])


const X = 2, Y = 2, Z = 2;
const nbEdges = (X+1)*(Y+1)*Z +(X+1)*(Z+1)*Y +(Z+1)*(Y+1)*X; 
// console.log(nbEdges)
const yEOff = X*(Y+1)*(Z+1);
const zEOff = yEOff+(X+1)*Y*(Z+1);
const xEOff =  X*(Y+1);
const xEOff1 =  (X+1)*(Y+1);
function cellEdges(x, y, z) {
    const e0 = x + X * y + xEOff * z;
    const e1 = x + X *(y+1) + xEOff * z;
    const e2 = x + X*y + xEOff*(z+1);
    const e3 = x + X *(y+1) + xEOff*(z+1);
    // console.log(e0, e1, e2, e3);

    const e4 = yEOff + x + (X+1)*y+ xEOff * z;
    const e5 = yEOff + (x+1) + (X+1)*y+ xEOff * z;
    const e6 = yEOff + x + (X+1)*y+ xEOff * (z+1);
    const e7 = yEOff + (x+1) + (X+1)*y+ xEOff * (z+1);
    // console.log(e4, e5, e6, e7);

    const e8 = zEOff + x + (X+1)*y + xEOff1 * z;
    const e9 = zEOff + (x+1) + (X+1)*y + xEOff1 * z;
    const e10 = zEOff + x + (X+1)*(y+1) + xEOff1 * z;
    const e11 = zEOff + (x+1) + (X+1)*(y+1) + xEOff1 * z;
    // console.log(e8, e9, e10, e11);

    // console.log(X*(Y+1)*(Z+1))
    // console.log((X+1)*Y*(Z+1))
}

// function

cellEdges(0, 1, 1)
const yVOff = (X + 1)
const zVOff = yVOff * (Y + 1);
function cellVertices(x, y, z) {
    const v0 = z * zVOff + yVOff*y + x;
    const v1 = z * zVOff + yVOff*y + (x + 1);
    const v2 = z * zVOff + yVOff*(y+1) + x;
    const v3 = z * zVOff + yVOff*(y+1) + (x + 1);

    const v4 = (z+1) * zVOff + yVOff*y + x;
    const v5 = (z+1) * zVOff + yVOff*y + (x + 1);
    const v6 = (z+1) * zVOff + yVOff*(y+1) + x;
    const v7 = (z+1) * zVOff + yVOff*(y+1) + (x+1);

    // console.log(v0, v1, v2, v3, v4, v5, v6, v7);
}

cellVertices(1, 1, 1)

const nbX = (X)*(Y+1)*(Z+1);
const nbY = (X+1)*(Y)*(Z+1);
const nbZ = (X+1)*(Y+1)*(Z);
function edgeCoord(e) {
    // console.log(`edge ${e}`);
    const A = (e >= nbX) * nbX + (e >= (nbX + nbY)) * nbY;
    const B = (X + (e > nbX)) * (Y + ((e < nbX) || (e > nbX + nbY)));
    const C = X + (e > nbX)


    const Ex = 1*(e < nbX);
    const Ey = 1*(e < nbY + nbX && e >= nbX);
    const Ez = 1*(e >= nbX + nbY);

    let e_ = e - A;
    let z = Math.floor(e_ / B)
    e_ = e_ % B;
    let y = Math.floor(e_ / C);
    let x = e_ % C;

    console.log(e)
    console.log(x,y,z, vertex(x,y,z));
    console.log(x+Ex,y+Ey,z+Ez, vertex(x+Ex,y+Ey,z+Ez));
    return {x, y, z};
}

// console.log(edgeCoord(49));
// console.log(edgeCoord(30));
// console.log(edgeCoord(25));
// console.log(edgeCoord(15));
// console.log(edgeCoord(18));
// console.log(edgeCoord(36));
// console.log(edgeCoord(17));
// console.log(edgeCoord(35));

function vertex(x, y, z){
let v = x + (X+1) * y + (X+1)*(Y+1) * z
// console.log(v)
vertexCoord(v)
return v;
}


function vertexCoord(v) {
// console.log('vertex', v)
let z = Math.floor(v / ((X+1)*(Y+1)));
v %= (X+1)*(Y+1);
let y = Math.floor(v / (X+1))
let x = v % (X+1);
// console.log(x, y, z)
}

// vertexCoord(26)

function edgeVertices(e) {
    let eCoord0 = edgeCoord(e);
    let eCoord1 = edgeCoord(e);

    if(e < nbX)
        eCoord1.x += 1;
    else if(e < nbY + nbX)
        eCoord1.y += 1;
    else
        eCoord1.z += 1;

    console.log(vertex(eCoord0.x, eCoord0.y, eCoord0.z), vertex(eCoord1.x, eCoord1.y, eCoord1.z))
}

// edgeVertices(36)
// edgeVertices(35)
// edgeVertices(0)
// edgeVertices(17)
// edgeVertices(30)
// edgeVertices(53)






// Axes are:
//
//      y
//      |     z
//      |   /
//      | /
//      +----- x
//
// Vertex and edge layout:
//
//            6             7
//            +-------------+               +-----6-------+   
//          / |           / |             / |            /|   
//        /   |         /   |          11   7         10   5
//    2 +-----+-------+  3  |         +-----+2------+     |   
//      |   4 +-------+-----+ 5       |     +-----4-+-----+   
//      |   /         |   /           3   8         1   9
//      | /           | /             | /           | /       
//    0 +-------------+ 1             +------0------+         
//
// Triangulation cases are generated prioritising rotations over inversions, which can introduce non-manifold geometry.
//



//            6             7
//            +-------------+               +-----3-------+   
//          / |           / |             / |            /|   
//        /   |         /   |           6   10        7   11
//    4 +-----+-------+  5  |         +-----+2------+     |   
//      |   2 +-------+-----+ 3       |     +-----1-+-----+   
//      |   /         |   /           8   4         9   5
//      | /           | /             | /           | /       
//    0 +-------------+ 1             +------0------+         
//

const TriangleTable = [
	[ -1 ],
	[ 0, 3, 8, -1 ],
	[ 0, 9, 1, -1 ],
	[ 3, 8, 1, 1, 8, 9, -1 ],
	[ 2, 11, 3, -1 ],
	[ 8, 0, 11, 11, 0, 2, -1 ],
	[ 3, 2, 11, 1, 0, 9, -1 ],
	[ 11, 1, 2, 11, 9, 1, 11, 8, 9, -1 ],
	[ 1, 10, 2, -1 ],
	[ 0, 3, 8, 2, 1, 10, -1 ],
	[ 10, 2, 9, 9, 2, 0, -1 ],
	/*11*/[ 8, 2, 3, 8, 10, 2, 8, 9, 10, -1 ],
	[ 11, 3, 10, 10, 3, 1, -1 ],
	/*13*/[ 10, 0, 1, 10, 8, 0, 10, 11, 8, -1 ],
	[ 9, 3, 0, 9, 11, 3, 9, 10, 11, -1 ],
	[ 8, 9, 11, 11, 9, 10, -1 ],
	[ 4, 8, 7, -1 ],
	[ 7, 4, 3, 3, 4, 0, -1 ],
	[ 4, 8, 7, 0, 9, 1, -1 ],
	[ 1, 4, 9, 1, 7, 4, 1, 3, 7, -1 ],
	[ 8, 7, 4, 11, 3, 2, -1 ],
	[ 4, 11, 7, 4, 2, 11, 4, 0, 2, -1 ],
	[ 0, 9, 1, 8, 7, 4, 11, 3, 2, -1 ],
	[ 7, 4, 11, 11, 4, 2, 2, 4, 9, 2, 9, 1, -1 ],
	[ 4, 8, 7, 2, 1, 10, -1 ],
	[ 7, 4, 3, 3, 4, 0, 10, 2, 1, -1 ],
	[ 10, 2, 9, 9, 2, 0, 7, 4, 8, -1 ],
	[ 10, 2, 3, 10, 3, 4, 3, 7, 4, 9, 10, 4, -1 ],
	[ 1, 10, 3, 3, 10, 11, 4, 8, 7, -1 ],
	[ 10, 11, 1, 11, 7, 4, 1, 11, 4, 1, 4, 0, -1 ],
	[ 7, 4, 8, 9, 3, 0, 9, 11, 3, 9, 10, 11, -1 ],
	[ 7, 4, 11, 4, 9, 11, 9, 10, 11, -1 ],
	[ 9, 4, 5, -1 ],
	[ 9, 4, 5, 8, 0, 3, -1 ],
	[ 4, 5, 0, 0, 5, 1, -1 ],
	[ 5, 8, 4, 5, 3, 8, 5, 1, 3, -1 ],
	[ 9, 4, 5, 11, 3, 2, -1 ],
	[ 2, 11, 0, 0, 11, 8, 5, 9, 4, -1 ],
	[ 4, 5, 0, 0, 5, 1, 11, 3, 2, -1 ],
	[ 5, 1, 4, 1, 2, 11, 4, 1, 11, 4, 11, 8, -1 ],
	[ 1, 10, 2, 5, 9, 4, -1 ],
	[ 9, 4, 5, 0, 3, 8, 2, 1, 10, -1 ],
	[ 2, 5, 10, 2, 4, 5, 2, 0, 4, -1 ],
	[ 10, 2, 5, 5, 2, 4, 4, 2, 3, 4, 3, 8, -1 ],
	[ 11, 3, 10, 10, 3, 1, 4, 5, 9, -1 ],
	[ 4, 5, 9, 10, 0, 1, 10, 8, 0, 10, 11, 8, -1 ],
	[ 11, 3, 0, 11, 0, 5, 0, 4, 5, 10, 11, 5, -1 ],
	[ 4, 5, 8, 5, 10, 8, 10, 11, 8, -1 ],
	[ 8, 7, 9, 9, 7, 5, -1 ],
	[ 3, 9, 0, 3, 5, 9, 3, 7, 5, -1 ],
	[ 7, 0, 8, 7, 1, 0, 7, 5, 1, -1 ],
	[ 7, 5, 3, 3, 5, 1, -1 ],
	[ 5, 9, 7, 7, 9, 8, 2, 11, 3, -1 ],
	[ 2, 11, 7, 2, 7, 9, 7, 5, 9, 0, 2, 9, -1 ],
	[ 2, 11, 3, 7, 0, 8, 7, 1, 0, 7, 5, 1, -1 ],
	[ 2, 11, 1, 11, 7, 1, 7, 5, 1, -1 ],
	[ 8, 7, 9, 9, 7, 5, 2, 1, 10, -1 ],
	[ 10, 2, 1, 3, 9, 0, 3, 5, 9, 3, 7, 5, -1 ],
	[ 7, 5, 8, 5, 10, 2, 8, 5, 2, 8, 2, 0, -1 ],
	[ 10, 2, 5, 2, 3, 5, 3, 7, 5, -1 ],
	[ 8, 7, 5, 8, 5, 9, 11, 3, 10, 3, 1, 10, -1 ],
	[ 5, 11, 7, 10, 11, 5, 1, 9, 0, -1 ],
	[ 11, 5, 10, 7, 5, 11, 8, 3, 0, -1 ],
	[ 5, 11, 7, 10, 11, 5, -1 ],
	[ 6, 7, 11, -1 ],
	[ 7, 11, 6, 3, 8, 0, -1 ],
	[ 6, 7, 11, 0, 9, 1, -1 ],
	[ 9, 1, 8, 8, 1, 3, 6, 7, 11, -1 ],
	[ 3, 2, 7, 7, 2, 6, -1 ],
	[ 0, 7, 8, 0, 6, 7, 0, 2, 6, -1 ],
	[ 6, 7, 2, 2, 7, 3, 9, 1, 0, -1 ],
	[ 6, 7, 8, 6, 8, 1, 8, 9, 1, 2, 6, 1, -1 ],
	[ 11, 6, 7, 10, 2, 1, -1 ],
	[ 3, 8, 0, 11, 6, 7, 10, 2, 1, -1 ],
	[ 0, 9, 2, 2, 9, 10, 7, 11, 6, -1 ],
	[ 6, 7, 11, 8, 2, 3, 8, 10, 2, 8, 9, 10, -1 ],
	[ 7, 10, 6, 7, 1, 10, 7, 3, 1, -1 ],
	[ 8, 0, 7, 7, 0, 6, 6, 0, 1, 6, 1, 10, -1 ],
	[ 7, 3, 6, 3, 0, 9, 6, 3, 9, 6, 9, 10, -1 ],
	[ 6, 7, 10, 7, 8, 10, 8, 9, 10, -1 ],
	[ 11, 6, 8, 8, 6, 4, -1 ],
	[ 6, 3, 11, 6, 0, 3, 6, 4, 0, -1 ],
	[ 11, 6, 8, 8, 6, 4, 1, 0, 9, -1 ],
	[ 1, 3, 9, 3, 11, 6, 9, 3, 6, 9, 6, 4, -1 ],
	[ 2, 8, 3, 2, 4, 8, 2, 6, 4, -1 ],
	[ 4, 0, 6, 6, 0, 2, -1 ],
	[ 9, 1, 0, 2, 8, 3, 2, 4, 8, 2, 6, 4, -1 ],
	[ 9, 1, 4, 1, 2, 4, 2, 6, 4, -1 ],
	[ 4, 8, 6, 6, 8, 11, 1, 10, 2, -1 ],
	[ 1, 10, 2, 6, 3, 11, 6, 0, 3, 6, 4, 0, -1 ],
	[ 11, 6, 4, 11, 4, 8, 10, 2, 9, 2, 0, 9, -1 ],
	[ 10, 4, 9, 6, 4, 10, 11, 2, 3, -1 ],
	[ 4, 8, 3, 4, 3, 10, 3, 1, 10, 6, 4, 10, -1 ],
	[ 1, 10, 0, 10, 6, 0, 6, 4, 0, -1 ],
	[ 4, 10, 6, 9, 10, 4, 0, 8, 3, -1 ],
	[ 4, 10, 6, 9, 10, 4, -1 ],
	[ 6, 7, 11, 4, 5, 9, -1 ],
	[ 4, 5, 9, 7, 11, 6, 3, 8, 0, -1 ],
	[ 1, 0, 5, 5, 0, 4, 11, 6, 7, -1 ],
	[ 11, 6, 7, 5, 8, 4, 5, 3, 8, 5, 1, 3, -1 ],
	[ 3, 2, 7, 7, 2, 6, 9, 4, 5, -1 ],
	[ 5, 9, 4, 0, 7, 8, 0, 6, 7, 0, 2, 6, -1 ],
	[ 3, 2, 6, 3, 6, 7, 1, 0, 5, 0, 4, 5, -1 ],
	[ 6, 1, 2, 5, 1, 6, 4, 7, 8, -1 ],
	[ 10, 2, 1, 6, 7, 11, 4, 5, 9, -1 ],
	[ 0, 3, 8, 4, 5, 9, 11, 6, 7, 10, 2, 1, -1 ],
	[ 7, 11, 6, 2, 5, 10, 2, 4, 5, 2, 0, 4, -1 ],
	[ 8, 4, 7, 5, 10, 6, 3, 11, 2, -1 ],
	[ 9, 4, 5, 7, 10, 6, 7, 1, 10, 7, 3, 1, -1 ],
	[ 10, 6, 5, 7, 8, 4, 1, 9, 0, -1 ],
	[ 4, 3, 0, 7, 3, 4, 6, 5, 10, -1 ],
	[ 10, 6, 5, 8, 4, 7, -1 ],
	[ 9, 6, 5, 9, 11, 6, 9, 8, 11, -1 ],
	[ 11, 6, 3, 3, 6, 0, 0, 6, 5, 0, 5, 9, -1 ],
	[ 11, 6, 5, 11, 5, 0, 5, 1, 0, 8, 11, 0, -1 ],
	[ 11, 6, 3, 6, 5, 3, 5, 1, 3, -1 ],
	[ 9, 8, 5, 8, 3, 2, 5, 8, 2, 5, 2, 6, -1 ],
	[ 5, 9, 6, 9, 0, 6, 0, 2, 6, -1 ],
	[ 1, 6, 5, 2, 6, 1, 3, 0, 8, -1 ],
	[ 1, 6, 5, 2, 6, 1, -1 ],
	[ 2, 1, 10, 9, 6, 5, 9, 11, 6, 9, 8, 11, -1 ],
	[ 9, 0, 1, 3, 11, 2, 5, 10, 6, -1 ],
	[ 11, 0, 8, 2, 0, 11, 10, 6, 5, -1 ],
	[ 3, 11, 2, 5, 10, 6, -1 ],
	[ 1, 8, 3, 9, 8, 1, 5, 10, 6, -1 ],
	[ 6, 5, 10, 0, 1, 9, -1 ],
	[ 8, 3, 0, 5, 10, 6, -1 ],
	[ 6, 5, 10, -1 ],
	[ 10, 5, 6, -1 ],
	[ 0, 3, 8, 6, 10, 5, -1 ],
	[ 10, 5, 6, 9, 1, 0, -1 ],
	[ 3, 8, 1, 1, 8, 9, 6, 10, 5, -1 ],
	[ 2, 11, 3, 6, 10, 5, -1 ],
	[ 8, 0, 11, 11, 0, 2, 5, 6, 10, -1 ],
	[ 1, 0, 9, 2, 11, 3, 6, 10, 5, -1 ],
	[ 5, 6, 10, 11, 1, 2, 11, 9, 1, 11, 8, 9, -1 ],
	[ 5, 6, 1, 1, 6, 2, -1 ],
	[ 5, 6, 1, 1, 6, 2, 8, 0, 3, -1 ],
	[ 6, 9, 5, 6, 0, 9, 6, 2, 0, -1 ],
	[ 6, 2, 5, 2, 3, 8, 5, 2, 8, 5, 8, 9, -1 ],
	[ 3, 6, 11, 3, 5, 6, 3, 1, 5, -1 ],
	[ 8, 0, 1, 8, 1, 6, 1, 5, 6, 11, 8, 6, -1 ],
	[ 11, 3, 6, 6, 3, 5, 5, 3, 0, 5, 0, 9, -1 ],
	[ 5, 6, 9, 6, 11, 9, 11, 8, 9, -1 ],
	[ 5, 6, 10, 7, 4, 8, -1 ],
	[ 0, 3, 4, 4, 3, 7, 10, 5, 6, -1 ],
	[ 5, 6, 10, 4, 8, 7, 0, 9, 1, -1 ],
	[ 6, 10, 5, 1, 4, 9, 1, 7, 4, 1, 3, 7, -1 ],
	[ 7, 4, 8, 6, 10, 5, 2, 11, 3, -1 ],
	[ 10, 5, 6, 4, 11, 7, 4, 2, 11, 4, 0, 2, -1 ],
	[ 4, 8, 7, 6, 10, 5, 3, 2, 11, 1, 0, 9, -1 ],
	[ 1, 2, 10, 11, 7, 6, 9, 5, 4, -1 ],
	[ 2, 1, 6, 6, 1, 5, 8, 7, 4, -1 ],
	[ 0, 3, 7, 0, 7, 4, 2, 1, 6, 1, 5, 6, -1 ],
	[ 8, 7, 4, 6, 9, 5, 6, 0, 9, 6, 2, 0, -1 ],
	[ 7, 2, 3, 6, 2, 7, 5, 4, 9, -1 ],
	[ 4, 8, 7, 3, 6, 11, 3, 5, 6, 3, 1, 5, -1 ],
	[ 5, 0, 1, 4, 0, 5, 7, 6, 11, -1 ],
	[ 9, 5, 4, 6, 11, 7, 0, 8, 3, -1 ],
	[ 11, 7, 6, 9, 5, 4, -1 ],
	[ 6, 10, 4, 4, 10, 9, -1 ],
	[ 6, 10, 4, 4, 10, 9, 3, 8, 0, -1 ],
	[ 0, 10, 1, 0, 6, 10, 0, 4, 6, -1 ],
	[ 6, 10, 1, 6, 1, 8, 1, 3, 8, 4, 6, 8, -1 ],
	[ 9, 4, 10, 10, 4, 6, 3, 2, 11, -1 ],
	[ 2, 11, 8, 2, 8, 0, 6, 10, 4, 10, 9, 4, -1 ],
	[ 11, 3, 2, 0, 10, 1, 0, 6, 10, 0, 4, 6, -1 ],
	[ 6, 8, 4, 11, 8, 6, 2, 10, 1, -1 ],
	[ 4, 1, 9, 4, 2, 1, 4, 6, 2, -1 ],
	[ 3, 8, 0, 4, 1, 9, 4, 2, 1, 4, 6, 2, -1 ],
	[ 6, 2, 4, 4, 2, 0, -1 ],
	[ 3, 8, 2, 8, 4, 2, 4, 6, 2, -1 ],
	[ 4, 6, 9, 6, 11, 3, 9, 6, 3, 9, 3, 1, -1 ],
	[ 8, 6, 11, 4, 6, 8, 9, 0, 1, -1 ],
	[ 11, 3, 6, 3, 0, 6, 0, 4, 6, -1 ],
	[ 8, 6, 11, 4, 6, 8, -1 ],
	[ 10, 7, 6, 10, 8, 7, 10, 9, 8, -1 ],
	[ 3, 7, 0, 7, 6, 10, 0, 7, 10, 0, 10, 9, -1 ],
	[ 6, 10, 7, 7, 10, 8, 8, 10, 1, 8, 1, 0, -1 ],
	[ 6, 10, 7, 10, 1, 7, 1, 3, 7, -1 ],
	[ 3, 2, 11, 10, 7, 6, 10, 8, 7, 10, 9, 8, -1 ],
	[ 2, 9, 0, 10, 9, 2, 6, 11, 7, -1 ],
	[ 0, 8, 3, 7, 6, 11, 1, 2, 10, -1 ],
	[ 7, 6, 11, 1, 2, 10, -1 ],
	[ 2, 1, 9, 2, 9, 7, 9, 8, 7, 6, 2, 7, -1 ],
	[ 2, 7, 6, 3, 7, 2, 0, 1, 9, -1 ],
	[ 8, 7, 0, 7, 6, 0, 6, 2, 0, -1 ],
	[ 7, 2, 3, 6, 2, 7, -1 ],
	[ 8, 1, 9, 3, 1, 8, 11, 7, 6, -1 ],
	[ 11, 7, 6, 1, 9, 0, -1 ],
	[ 6, 11, 7, 0, 8, 3, -1 ],
	[ 11, 7, 6, -1 ],
	[ 7, 11, 5, 5, 11, 10, -1 ],
	[ 10, 5, 11, 11, 5, 7, 0, 3, 8, -1 ],
	[ 7, 11, 5, 5, 11, 10, 0, 9, 1, -1 ],
	[ 7, 11, 10, 7, 10, 5, 3, 8, 1, 8, 9, 1, -1 ],
	[ 5, 2, 10, 5, 3, 2, 5, 7, 3, -1 ],
	[ 5, 7, 10, 7, 8, 0, 10, 7, 0, 10, 0, 2, -1 ],
	[ 0, 9, 1, 5, 2, 10, 5, 3, 2, 5, 7, 3, -1 ],
	[ 9, 7, 8, 5, 7, 9, 10, 1, 2, -1 ],
	[ 1, 11, 2, 1, 7, 11, 1, 5, 7, -1 ],
	[ 8, 0, 3, 1, 11, 2, 1, 7, 11, 1, 5, 7, -1 ],
	[ 7, 11, 2, 7, 2, 9, 2, 0, 9, 5, 7, 9, -1 ],
	[ 7, 9, 5, 8, 9, 7, 3, 11, 2, -1 ],
	[ 3, 1, 7, 7, 1, 5, -1 ],
	[ 8, 0, 7, 0, 1, 7, 1, 5, 7, -1 ],
	[ 0, 9, 3, 9, 5, 3, 5, 7, 3, -1 ],
	[ 9, 7, 8, 5, 7, 9, -1 ],
	[ 8, 5, 4, 8, 10, 5, 8, 11, 10, -1 ],
	[ 0, 3, 11, 0, 11, 5, 11, 10, 5, 4, 0, 5, -1 ],
	[ 1, 0, 9, 8, 5, 4, 8, 10, 5, 8, 11, 10, -1 ],
	[ 10, 3, 11, 1, 3, 10, 9, 5, 4, -1 ],
	[ 3, 2, 8, 8, 2, 4, 4, 2, 10, 4, 10, 5, -1 ],
	[ 10, 5, 2, 5, 4, 2, 4, 0, 2, -1 ],
	[ 5, 4, 9, 8, 3, 0, 10, 1, 2, -1 ],
	[ 2, 10, 1, 4, 9, 5, -1 ],
	[ 8, 11, 4, 11, 2, 1, 4, 11, 1, 4, 1, 5, -1 ],
	[ 0, 5, 4, 1, 5, 0, 2, 3, 11, -1 ],
	[ 0, 11, 2, 8, 11, 0, 4, 9, 5, -1 ],
	[ 5, 4, 9, 2, 3, 11, -1 ],
	[ 4, 8, 5, 8, 3, 5, 3, 1, 5, -1 ],
	[ 0, 5, 4, 1, 5, 0, -1 ],
	[ 5, 4, 9, 3, 0, 8, -1 ],
	[ 5, 4, 9, -1 ],
	[ 11, 4, 7, 11, 9, 4, 11, 10, 9, -1 ],
	[ 0, 3, 8, 11, 4, 7, 11, 9, 4, 11, 10, 9, -1 ],
	[ 11, 10, 7, 10, 1, 0, 7, 10, 0, 7, 0, 4, -1 ],
	[ 3, 10, 1, 11, 10, 3, 7, 8, 4, -1 ],
	[ 3, 2, 10, 3, 10, 4, 10, 9, 4, 7, 3, 4, -1 ],
	[ 9, 2, 10, 0, 2, 9, 8, 4, 7, -1 ],
	[ 3, 4, 7, 0, 4, 3, 1, 2, 10, -1 ],
	[ 7, 8, 4, 10, 1, 2, -1 ],
	[ 7, 11, 4, 4, 11, 9, 9, 11, 2, 9, 2, 1, -1 ],
	[ 1, 9, 0, 4, 7, 8, 2, 3, 11, -1 ],
	[ 7, 11, 4, 11, 2, 4, 2, 0, 4, -1 ],
	[ 4, 7, 8, 2, 3, 11, -1 ],
	[ 9, 4, 1, 4, 7, 1, 7, 3, 1, -1 ],
	[ 7, 8, 4, 1, 9, 0, -1 ],
	[ 3, 4, 7, 0, 4, 3, -1 ],
	[ 7, 8, 4, -1 ],
	[ 11, 10, 8, 8, 10, 9, -1 ],
	[ 0, 3, 9, 3, 11, 9, 11, 10, 9, -1 ],
	[ 1, 0, 10, 0, 8, 10, 8, 11, 10, -1 ],
	[ 10, 3, 11, 1, 3, 10, -1 ],
	[ 3, 2, 8, 2, 10, 8, 10, 9, 8, -1 ],
	[ 9, 2, 10, 0, 2, 9, -1 ],
	[ 8, 3, 0, 10, 1, 2, -1 ],
	[ 2, 10, 1, -1 ],
	[ 2, 1, 11, 1, 9, 11, 9, 8, 11, -1 ],
	[ 11, 2, 3, 9, 0, 1, -1 ],
	[ 11, 0, 8, 2, 0, 11, -1 ],
	[ 3, 11, 2, -1 ],
	[ 1, 8, 3, 9, 8, 1, -1 ],
	[ 1, 9, 0, -1 ],
	[ 8, 3, 0, -1 ],
	[ -1 ],
];


// let string = "const triTable = [\n";
// for(let line = 0; line < 256; ++line) {
//     string += "/*"+ line+"*/  ["
//     console.log(TriangleTable[line])
//     for(let edge = 0; edge < 15; ++edge) {
//         switch (TriangleTable[line][edge]) {
//             case 0: 
//                 string += " 0,";
//                 break;
//             case 1: 
//                 string += " 9,";
//                 break;
//             case 2: 
//                 string += " 2,";
//                 break;
//             case 3: 
//                 string += " 8,";
//                 break;
//             case 4: 
//                 string += " 1,";
//                 break;
//             case 5:
//                 string += "11,";
//                 break;
//             case 6: 
//                 string += " 3,";
//                 break;
//             case 7: 
//                 string += "10,";
//                 break;
//             case 8: 
//                 string += " 4,";
//                 break;
//             case 9: 
//                 string += " 5,";
//                 break;
//             case 10: 
//                 string += " 7,";
//                 break;
//             case 11: 
//                 string += " 6,";
//                 break;
//             default:
//                 string += "-1,";
//         }
//     }
//     string+= "],\n";
// }

// string += "\n];"

// console.log(string);

const triTable = [
    /*0*/  [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*1*/  [ 0, 8, 4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*2*/  [ 0, 5, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*3*/  [ 8, 4, 9, 9, 4, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*4*/  [ 2, 6, 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*5*/  [ 4, 0, 6, 6, 0, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*6*/  [ 8, 2, 6, 9, 0, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*7*/  [ 6, 9, 2, 6, 5, 9, 6, 4, 5,-1,-1,-1,-1,-1,-1,],
    /*8*/  [ 9, 7, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*9*/  [ 0, 8, 4, 2, 9, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*10*/  [ 7, 2, 5, 5, 2, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*11*/  [ 4, 2, 8, 4, 7, 2, 4, 5, 7,-1,-1,-1,-1,-1,-1,],
    /*12*/  [ 6, 8, 7, 7, 8, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*13*/  [ 7, 0, 9, 7, 4, 0, 7, 6, 4,-1,-1,-1,-1,-1,-1,],
    /*14*/  [ 5, 8, 0, 5, 6, 8, 5, 7, 6,-1,-1,-1,-1,-1,-1,],
    /*15*/  [ 4, 5, 6, 6, 5, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*16*/  [ 1, 4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*17*/  [10, 1, 8, 8, 1, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*18*/  [ 1, 4,10, 0, 5, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*19*/  [ 9, 1, 5, 9,10, 1, 9, 8,10,-1,-1,-1,-1,-1,-1,],
    /*20*/  [ 4,10, 1, 6, 8, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*21*/  [ 1, 6,10, 1, 2, 6, 1, 0, 2,-1,-1,-1,-1,-1,-1,],
    /*22*/  [ 0, 5, 9, 4,10, 1, 6, 8, 2,-1,-1,-1,-1,-1,-1,],
    /*23*/  [10, 1, 6, 6, 1, 2, 2, 1, 5, 2, 5, 9,-1,-1,-1,],
    /*24*/  [ 1, 4,10, 2, 9, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*25*/  [10, 1, 8, 8, 1, 0, 7, 2, 9,-1,-1,-1,-1,-1,-1,],
    /*26*/  [ 7, 2, 5, 5, 2, 0,10, 1, 4,-1,-1,-1,-1,-1,-1,],
    /*27*/  [ 7, 2, 8, 7, 8, 1, 8,10, 1, 5, 7, 1,-1,-1,-1,],
    /*28*/  [ 9, 7, 8, 8, 7, 6, 1, 4,10,-1,-1,-1,-1,-1,-1,],
    /*29*/  [ 7, 6, 9, 6,10, 1, 9, 6, 1, 9, 1, 0,-1,-1,-1,],
    /*30*/  [10, 1, 4, 5, 8, 0, 5, 6, 8, 5, 7, 6,-1,-1,-1,],
    /*31*/  [10, 1, 6, 1, 5, 6, 5, 7, 6,-1,-1,-1,-1,-1,-1,],
    /*32*/  [ 5, 1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*33*/  [ 5, 1,11, 4, 0, 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*34*/  [ 1,11, 0, 0,11, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*35*/  [11, 4, 1,11, 8, 4,11, 9, 8,-1,-1,-1,-1,-1,-1,],
    /*36*/  [ 5, 1,11, 6, 8, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*37*/  [ 2, 6, 0, 0, 6, 4,11, 5, 1,-1,-1,-1,-1,-1,-1,],
    /*38*/  [ 1,11, 0, 0,11, 9, 6, 8, 2,-1,-1,-1,-1,-1,-1,],
    /*39*/  [11, 9, 1, 9, 2, 6, 1, 9, 6, 1, 6, 4,-1,-1,-1,],
    /*40*/  [ 9, 7, 2,11, 5, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*41*/  [ 5, 1,11, 0, 8, 4, 2, 9, 7,-1,-1,-1,-1,-1,-1,],
    /*42*/  [ 2,11, 7, 2, 1,11, 2, 0, 1,-1,-1,-1,-1,-1,-1,],
    /*43*/  [ 7, 2,11,11, 2, 1, 1, 2, 8, 1, 8, 4,-1,-1,-1,],
    /*44*/  [ 6, 8, 7, 7, 8, 9, 1,11, 5,-1,-1,-1,-1,-1,-1,],
    /*45*/  [ 1,11, 5, 7, 0, 9, 7, 4, 0, 7, 6, 4,-1,-1,-1,],
    /*46*/  [ 6, 8, 0, 6, 0,11, 0, 1,11, 7, 6,11,-1,-1,-1,],
    /*47*/  [ 1,11, 4,11, 7, 4, 7, 6, 4,-1,-1,-1,-1,-1,-1,],
    /*48*/  [ 4,10, 5, 5,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*49*/  [ 8, 5, 0, 8,11, 5, 8,10,11,-1,-1,-1,-1,-1,-1,],
    /*50*/  [10, 0, 4,10, 9, 0,10,11, 9,-1,-1,-1,-1,-1,-1,],
    /*51*/  [10,11, 8, 8,11, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*52*/  [11, 5,10,10, 5, 4, 2, 6, 8,-1,-1,-1,-1,-1,-1,],
    /*53*/  [ 2, 6,10, 2,10, 5,10,11, 5, 0, 2, 5,-1,-1,-1,],
    /*54*/  [ 2, 6, 8,10, 0, 4,10, 9, 0,10,11, 9,-1,-1,-1,],
    /*55*/  [ 2, 6, 9, 6,10, 9,10,11, 9,-1,-1,-1,-1,-1,-1,],
    /*56*/  [ 4,10, 5, 5,10,11, 2, 9, 7,-1,-1,-1,-1,-1,-1,],
    /*57*/  [ 7, 2, 9, 8, 5, 0, 8,11, 5, 8,10,11,-1,-1,-1,],
    /*58*/  [10,11, 4,11, 7, 2, 4,11, 2, 4, 2, 0,-1,-1,-1,],
    /*59*/  [ 7, 2,11, 2, 8,11, 8,10,11,-1,-1,-1,-1,-1,-1,],
    /*60*/  [ 4,10,11, 4,11, 5, 6, 8, 7, 8, 9, 7,-1,-1,-1,],
    /*61*/  [11, 6,10, 7, 6,11, 9, 5, 0,-1,-1,-1,-1,-1,-1,],
    /*62*/  [ 6,11, 7,10,11, 6, 4, 8, 0,-1,-1,-1,-1,-1,-1,],
    /*63*/  [11, 6,10, 7, 6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*64*/  [ 3,10, 6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*65*/  [10, 6, 3, 8, 4, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*66*/  [ 3,10, 6, 0, 5, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*67*/  [ 5, 9, 4, 4, 9, 8, 3,10, 6,-1,-1,-1,-1,-1,-1,],
    /*68*/  [ 8, 2,10,10, 2, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*69*/  [ 0,10, 4, 0, 3,10, 0, 2, 3,-1,-1,-1,-1,-1,-1,],
    /*70*/  [ 3,10, 2, 2,10, 8, 5, 9, 0,-1,-1,-1,-1,-1,-1,],
    /*71*/  [ 3,10, 4, 3, 4, 9, 4, 5, 9, 2, 3, 9,-1,-1,-1,],
    /*72*/  [ 6, 3,10, 7, 2, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*73*/  [ 8, 4, 0, 6, 3,10, 7, 2, 9,-1,-1,-1,-1,-1,-1,],
    /*74*/  [ 0, 5, 2, 2, 5, 7,10, 6, 3,-1,-1,-1,-1,-1,-1,],
    /*75*/  [ 3,10, 6, 4, 2, 8, 4, 7, 2, 4, 5, 7,-1,-1,-1,],
    /*76*/  [10, 7, 3,10, 9, 7,10, 8, 9,-1,-1,-1,-1,-1,-1,],
    /*77*/  [ 4, 0,10,10, 0, 3, 3, 0, 9, 3, 9, 7,-1,-1,-1,],
    /*78*/  [10, 8, 3, 8, 0, 5, 3, 8, 5, 3, 5, 7,-1,-1,-1,],
    /*79*/  [ 3,10, 7,10, 4, 7, 4, 5, 7,-1,-1,-1,-1,-1,-1,],
    /*80*/  [ 6, 3, 4, 4, 3, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*81*/  [ 3, 8, 6, 3, 0, 8, 3, 1, 0,-1,-1,-1,-1,-1,-1,],
    /*82*/  [ 6, 3, 4, 4, 3, 1, 9, 0, 5,-1,-1,-1,-1,-1,-1,],
    /*83*/  [ 9, 8, 5, 8, 6, 3, 5, 8, 3, 5, 3, 1,-1,-1,-1,],
    /*84*/  [ 2, 4, 8, 2, 1, 4, 2, 3, 1,-1,-1,-1,-1,-1,-1,],
    /*85*/  [ 1, 0, 3, 3, 0, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*86*/  [ 5, 9, 0, 2, 4, 8, 2, 1, 4, 2, 3, 1,-1,-1,-1,],
    /*87*/  [ 5, 9, 1, 9, 2, 1, 2, 3, 1,-1,-1,-1,-1,-1,-1,],
    /*88*/  [ 1, 4, 3, 3, 4, 6, 9, 7, 2,-1,-1,-1,-1,-1,-1,],
    /*89*/  [ 9, 7, 2, 3, 8, 6, 3, 0, 8, 3, 1, 0,-1,-1,-1,],
    /*90*/  [ 6, 3, 1, 6, 1, 4, 7, 2, 5, 2, 0, 5,-1,-1,-1,],
    /*91*/  [ 7, 1, 5, 3, 1, 7, 6, 2, 8,-1,-1,-1,-1,-1,-1,],
    /*92*/  [ 1, 4, 8, 1, 8, 7, 8, 9, 7, 3, 1, 7,-1,-1,-1,],
    /*93*/  [ 9, 7, 0, 7, 3, 0, 3, 1, 0,-1,-1,-1,-1,-1,-1,],
    /*94*/  [ 1, 7, 3, 5, 7, 1, 0, 4, 8,-1,-1,-1,-1,-1,-1,],
    /*95*/  [ 1, 7, 3, 5, 7, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*96*/  [ 3,10, 6, 1,11, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*97*/  [ 1,11, 5,10, 6, 3, 8, 4, 0,-1,-1,-1,-1,-1,-1,],
    /*98*/  [ 9, 0,11,11, 0, 1, 6, 3,10,-1,-1,-1,-1,-1,-1,],
    /*99*/  [ 6, 3,10,11, 4, 1,11, 8, 4,11, 9, 8,-1,-1,-1,],
    /*100*/  [ 8, 2,10,10, 2, 3, 5, 1,11,-1,-1,-1,-1,-1,-1,],
    /*101*/  [11, 5, 1, 0,10, 4, 0, 3,10, 0, 2, 3,-1,-1,-1,],
    /*102*/  [ 8, 2, 3, 8, 3,10, 9, 0,11, 0, 1,11,-1,-1,-1,],
    /*103*/  [ 3, 9, 2,11, 9, 3, 1,10, 4,-1,-1,-1,-1,-1,-1,],
    /*104*/  [ 7, 2, 9, 3,10, 6, 1,11, 5,-1,-1,-1,-1,-1,-1,],
    /*105*/  [ 0, 8, 4, 1,11, 5, 6, 3,10, 7, 2, 9,-1,-1,-1,],
    /*106*/  [10, 6, 3, 2,11, 7, 2, 1,11, 2, 0, 1,-1,-1,-1,],
    /*107*/  [ 4, 1,10,11, 7, 3, 8, 6, 2,-1,-1,-1,-1,-1,-1,],
    /*108*/  [ 5, 1,11,10, 7, 3,10, 9, 7,10, 8, 9,-1,-1,-1,],
    /*109*/  [ 7, 3,11,10, 4, 1, 9, 5, 0,-1,-1,-1,-1,-1,-1,],
    /*110*/  [ 1, 8, 0,10, 8, 1, 3,11, 7,-1,-1,-1,-1,-1,-1,],
    /*111*/  [ 7, 3,11, 4, 1,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*112*/  [ 5, 3,11, 5, 6, 3, 5, 4, 6,-1,-1,-1,-1,-1,-1,],
    /*113*/  [ 6, 3, 8, 8, 3, 0, 0, 3,11, 0,11, 5,-1,-1,-1,],
    /*114*/  [ 6, 3,11, 6,11, 0,11, 9, 0, 4, 6, 0,-1,-1,-1,],
    /*115*/  [ 6, 3, 8, 3,11, 8,11, 9, 8,-1,-1,-1,-1,-1,-1,],
    /*116*/  [ 5, 4,11, 4, 8, 2,11, 4, 2,11, 2, 3,-1,-1,-1,],
    /*117*/  [11, 5, 3, 5, 0, 3, 0, 2, 3,-1,-1,-1,-1,-1,-1,],
    /*118*/  [ 9, 3,11, 2, 3, 9, 8, 0, 4,-1,-1,-1,-1,-1,-1,],
    /*119*/  [ 9, 3,11, 2, 3, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*120*/  [ 2, 9, 7, 5, 3,11, 5, 6, 3, 5, 4, 6,-1,-1,-1,],
    /*121*/  [ 5, 0, 9, 8, 6, 2,11, 7, 3,-1,-1,-1,-1,-1,-1,],
    /*122*/  [ 6, 0, 4, 2, 0, 6, 7, 3,11,-1,-1,-1,-1,-1,-1,],
    /*123*/  [ 8, 6, 2,11, 7, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*124*/  [ 9, 4, 8, 5, 4, 9,11, 7, 3,-1,-1,-1,-1,-1,-1,],
    /*125*/  [ 3,11, 7, 0, 9, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*126*/  [ 4, 8, 0,11, 7, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*127*/  [ 3,11, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*128*/  [ 7,11, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*129*/  [ 0, 8, 4, 3, 7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*130*/  [ 7,11, 3, 5, 9, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*131*/  [ 8, 4, 9, 9, 4, 5, 3, 7,11,-1,-1,-1,-1,-1,-1,],
    /*132*/  [ 2, 6, 8, 3, 7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*133*/  [ 4, 0, 6, 6, 0, 2,11, 3, 7,-1,-1,-1,-1,-1,-1,],
    /*134*/  [ 9, 0, 5, 2, 6, 8, 3, 7,11,-1,-1,-1,-1,-1,-1,],
    /*135*/  [11, 3, 7, 6, 9, 2, 6, 5, 9, 6, 4, 5,-1,-1,-1,],
    /*136*/  [11, 3, 9, 9, 3, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*137*/  [11, 3, 9, 9, 3, 2, 4, 0, 8,-1,-1,-1,-1,-1,-1,],
    /*138*/  [ 3, 5,11, 3, 0, 5, 3, 2, 0,-1,-1,-1,-1,-1,-1,],
    /*139*/  [ 3, 2,11, 2, 8, 4,11, 2, 4,11, 4, 5,-1,-1,-1,],
    /*140*/  [ 8, 3, 6, 8,11, 3, 8, 9,11,-1,-1,-1,-1,-1,-1,],
    /*141*/  [ 4, 0, 9, 4, 9, 3, 9,11, 3, 6, 4, 3,-1,-1,-1,],
    /*142*/  [ 6, 8, 3, 3, 8,11,11, 8, 0,11, 0, 5,-1,-1,-1,],
    /*143*/  [11, 3, 5, 3, 6, 5, 6, 4, 5,-1,-1,-1,-1,-1,-1,],
    /*144*/  [11, 3, 7,10, 1, 4,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*145*/  [ 0, 8, 1, 1, 8,10, 7,11, 3,-1,-1,-1,-1,-1,-1,],
    /*146*/  [11, 3, 7, 1, 4,10, 0, 5, 9,-1,-1,-1,-1,-1,-1,],
    /*147*/  [ 3, 7,11, 9, 1, 5, 9,10, 1, 9, 8,10,-1,-1,-1,],
    /*148*/  [10, 1, 4, 3, 7,11, 2, 6, 8,-1,-1,-1,-1,-1,-1,],
    /*149*/  [ 7,11, 3, 1, 6,10, 1, 2, 6, 1, 0, 2,-1,-1,-1,],
    /*150*/  [ 1, 4,10, 3, 7,11, 8, 2, 6, 9, 0, 5,-1,-1,-1,],
    /*151*/  [ 9, 2, 7, 6,10, 3, 5,11, 1,-1,-1,-1,-1,-1,-1,],
    /*152*/  [ 2, 9, 3, 3, 9,11, 4,10, 1,-1,-1,-1,-1,-1,-1,],
    /*153*/  [ 0, 8,10, 0,10, 1, 2, 9, 3, 9,11, 3,-1,-1,-1,],
    /*154*/  [ 4,10, 1, 3, 5,11, 3, 0, 5, 3, 2, 0,-1,-1,-1,],
    /*155*/  [10, 2, 8, 3, 2,10,11, 1, 5,-1,-1,-1,-1,-1,-1,],
    /*156*/  [ 1, 4,10, 8, 3, 6, 8,11, 3, 8, 9,11,-1,-1,-1,],
    /*157*/  [11, 0, 9, 1, 0,11,10, 3, 6,-1,-1,-1,-1,-1,-1,],
    /*158*/  [ 5,11, 1, 3, 6,10, 0, 4, 8,-1,-1,-1,-1,-1,-1,],
    /*159*/  [ 6,10, 3, 5,11, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*160*/  [ 3, 7, 1, 1, 7, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*161*/  [ 3, 7, 1, 1, 7, 5, 8, 4, 0,-1,-1,-1,-1,-1,-1,],
    /*162*/  [ 0, 7, 9, 0, 3, 7, 0, 1, 3,-1,-1,-1,-1,-1,-1,],
    /*163*/  [ 3, 7, 9, 3, 9, 4, 9, 8, 4, 1, 3, 4,-1,-1,-1,],
    /*164*/  [ 5, 1, 7, 7, 1, 3, 8, 2, 6,-1,-1,-1,-1,-1,-1,],
    /*165*/  [ 2, 6, 4, 2, 4, 0, 3, 7, 1, 7, 5, 1,-1,-1,-1,],
    /*166*/  [ 6, 8, 2, 0, 7, 9, 0, 3, 7, 0, 1, 3,-1,-1,-1,],
    /*167*/  [ 3, 4, 1, 6, 4, 3, 2, 7, 9,-1,-1,-1,-1,-1,-1,],
    /*168*/  [ 1, 9, 5, 1, 2, 9, 1, 3, 2,-1,-1,-1,-1,-1,-1,],
    /*169*/  [ 8, 4, 0, 1, 9, 5, 1, 2, 9, 1, 3, 2,-1,-1,-1,],
    /*170*/  [ 3, 2, 1, 1, 2, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*171*/  [ 8, 4, 2, 4, 1, 2, 1, 3, 2,-1,-1,-1,-1,-1,-1,],
    /*172*/  [ 1, 3, 5, 3, 6, 8, 5, 3, 8, 5, 8, 9,-1,-1,-1,],
    /*173*/  [ 4, 3, 6, 1, 3, 4, 5, 0, 9,-1,-1,-1,-1,-1,-1,],
    /*174*/  [ 6, 8, 3, 8, 0, 3, 0, 1, 3,-1,-1,-1,-1,-1,-1,],
    /*175*/  [ 4, 3, 6, 1, 3, 4,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*176*/  [ 7,10, 3, 7, 4,10, 7, 5, 4,-1,-1,-1,-1,-1,-1,],
    /*177*/  [ 8,10, 0,10, 3, 7, 0,10, 7, 0, 7, 5,-1,-1,-1,],
    /*178*/  [ 3, 7,10,10, 7, 4, 4, 7, 9, 4, 9, 0,-1,-1,-1,],
    /*179*/  [ 3, 7,10, 7, 9,10, 9, 8,10,-1,-1,-1,-1,-1,-1,],
    /*180*/  [ 8, 2, 6, 7,10, 3, 7, 4,10, 7, 5, 4,-1,-1,-1,],
    /*181*/  [ 2, 5, 0, 7, 5, 2, 3, 6,10,-1,-1,-1,-1,-1,-1,],
    /*182*/  [ 0, 4, 8,10, 3, 6, 9, 2, 7,-1,-1,-1,-1,-1,-1,],
    /*183*/  [10, 3, 6, 9, 2, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*184*/  [ 2, 9, 5, 2, 5,10, 5, 4,10, 3, 2,10,-1,-1,-1,],
    /*185*/  [ 2,10, 3, 8,10, 2, 0, 9, 5,-1,-1,-1,-1,-1,-1,],
    /*186*/  [ 4,10, 0,10, 3, 0, 3, 2, 0,-1,-1,-1,-1,-1,-1,],
    /*187*/  [10, 2, 8, 3, 2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*188*/  [ 4, 9, 5, 8, 9, 4, 6,10, 3,-1,-1,-1,-1,-1,-1,],
    /*189*/  [ 6,10, 3, 9, 5, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*190*/  [ 3, 6,10, 0, 4, 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*191*/  [ 6,10, 3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*192*/  [10, 6,11,11, 6, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*193*/  [ 7,11, 6, 6,11,10, 0, 8, 4,-1,-1,-1,-1,-1,-1,],
    /*194*/  [10, 6,11,11, 6, 7, 0, 5, 9,-1,-1,-1,-1,-1,-1,],
    /*195*/  [10, 6, 7,10, 7,11, 8, 4, 9, 4, 5, 9,-1,-1,-1,],
    /*196*/  [11, 2, 7,11, 8, 2,11,10, 8,-1,-1,-1,-1,-1,-1,],
    /*197*/  [11,10, 7,10, 4, 0, 7,10, 0, 7, 0, 2,-1,-1,-1,],
    /*198*/  [ 0, 5, 9,11, 2, 7,11, 8, 2,11,10, 8,-1,-1,-1,],
    /*199*/  [ 5,10, 4,11,10, 5, 7, 9, 2,-1,-1,-1,-1,-1,-1,],
    /*200*/  [ 9, 6, 2, 9,10, 6, 9,11,10,-1,-1,-1,-1,-1,-1,],
    /*201*/  [ 4, 0, 8, 9, 6, 2, 9,10, 6, 9,11,10,-1,-1,-1,],
    /*202*/  [10, 6, 2,10, 2, 5, 2, 0, 5,11,10, 5,-1,-1,-1,],
    /*203*/  [10, 5,11, 4, 5,10, 8, 6, 2,-1,-1,-1,-1,-1,-1,],
    /*204*/  [ 8, 9,10,10, 9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*205*/  [ 4, 0,10, 0, 9,10, 9,11,10,-1,-1,-1,-1,-1,-1,],
    /*206*/  [ 0, 5, 8, 5,11, 8,11,10, 8,-1,-1,-1,-1,-1,-1,],
    /*207*/  [ 5,10, 4,11,10, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*208*/  [ 4,11, 1, 4, 7,11, 4, 6, 7,-1,-1,-1,-1,-1,-1,],
    /*209*/  [ 0, 8, 6, 0, 6,11, 6, 7,11, 1, 0,11,-1,-1,-1,],
    /*210*/  [ 9, 0, 5, 4,11, 1, 4, 7,11, 4, 6, 7,-1,-1,-1,],
    /*211*/  [ 7, 8, 6, 9, 8, 7, 5,11, 1,-1,-1,-1,-1,-1,-1,],
    /*212*/  [ 8, 2, 4, 4, 2, 1, 1, 2, 7, 1, 7,11,-1,-1,-1,],
    /*213*/  [ 7,11, 2,11, 1, 2, 1, 0, 2,-1,-1,-1,-1,-1,-1,],
    /*214*/  [11, 1, 5, 4, 8, 0, 7, 9, 2,-1,-1,-1,-1,-1,-1,],
    /*215*/  [ 2, 7, 9, 1, 5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*216*/  [ 4, 6, 1, 6, 2, 9, 1, 6, 9, 1, 9,11,-1,-1,-1,],
    /*217*/  [ 0,11, 1, 9,11, 0, 2, 8, 6,-1,-1,-1,-1,-1,-1,],
    /*218*/  [ 0, 6, 2, 4, 6, 0, 1, 5,11,-1,-1,-1,-1,-1,-1,],
    /*219*/  [11, 1, 5, 2, 8, 6,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*220*/  [ 1, 4,11, 4, 8,11, 8, 9,11,-1,-1,-1,-1,-1,-1,],
    /*221*/  [ 0,11, 1, 9,11, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*222*/  [11, 1, 5, 8, 0, 4,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*223*/  [11, 1, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*224*/  [ 6, 1,10, 6, 5, 1, 6, 7, 5,-1,-1,-1,-1,-1,-1,],
    /*225*/  [ 0, 8, 4, 6, 1,10, 6, 5, 1, 6, 7, 5,-1,-1,-1,],
    /*226*/  [ 6, 7,10, 7, 9, 0,10, 7, 0,10, 0, 1,-1,-1,-1,],
    /*227*/  [ 8, 7, 9, 6, 7, 8,10, 4, 1,-1,-1,-1,-1,-1,-1,],
    /*228*/  [ 8, 2, 7, 8, 7, 1, 7, 5, 1,10, 8, 1,-1,-1,-1,],
    /*229*/  [ 5, 2, 7, 0, 2, 5, 4, 1,10,-1,-1,-1,-1,-1,-1,],
    /*230*/  [ 8, 1,10, 0, 1, 8, 9, 2, 7,-1,-1,-1,-1,-1,-1,],
    /*231*/  [10, 4, 1, 7, 9, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*232*/  [10, 6, 1, 1, 6, 5, 5, 6, 2, 5, 2, 9,-1,-1,-1,],
    /*233*/  [ 9, 5, 0, 1,10, 4, 2, 8, 6,-1,-1,-1,-1,-1,-1,],
    /*234*/  [10, 6, 1, 6, 2, 1, 2, 0, 1,-1,-1,-1,-1,-1,-1,],
    /*235*/  [ 1,10, 4, 2, 8, 6,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*236*/  [ 5, 1, 9, 1,10, 9,10, 8, 9,-1,-1,-1,-1,-1,-1,],
    /*237*/  [10, 4, 1, 9, 5, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*238*/  [ 8, 1,10, 0, 1, 8,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*239*/  [10, 4, 1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*240*/  [ 6, 7, 4, 4, 7, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*241*/  [ 0, 8, 5, 8, 6, 5, 6, 7, 5,-1,-1,-1,-1,-1,-1,],
    /*242*/  [ 9, 0, 7, 0, 4, 7, 4, 6, 7,-1,-1,-1,-1,-1,-1,],
    /*243*/  [ 7, 8, 6, 9, 8, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*244*/  [ 8, 2, 4, 2, 7, 4, 7, 5, 4,-1,-1,-1,-1,-1,-1,],
    /*245*/  [ 5, 2, 7, 0, 2, 5,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*246*/  [ 4, 8, 0, 7, 9, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*247*/  [ 2, 7, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*248*/  [ 2, 9, 6, 9, 5, 6, 5, 4, 6,-1,-1,-1,-1,-1,-1,],
    /*249*/  [ 6, 2, 8, 5, 0, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*250*/  [ 6, 0, 4, 2, 0, 6,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*251*/  [ 8, 6, 2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*252*/  [ 9, 4, 8, 5, 4, 9,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*253*/  [ 9, 5, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*254*/  [ 4, 8, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    /*255*/  [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,],
    
    ];

function toBin(dec) {
    return (dec >>> 0).toString(2);
}

function toArrBin(dec) {
    let b = toBin(dec);
    let arr = [0, 0, 0, 0, 0, 0, 0, 0];
    for(let i = 0; i < b.length; i++) {
        arr[b.length - i - 1] = b[i] ?? '0';
    }
    return arr.map(a => parseInt(a));
}

const vertconv = [0, 1, 4, 5, 2, 3, 6, 7];

let b = toBin(2)
// console.log(b, b[0], b[1], b.length)


const triTable2 = [];

for(let l = 0; l < 256; l++) {
    // let caseBin = toBin(l);
    let binArr = toArrBin(l)
    // console.log(binArr);
    let binArr2 = [];
    for(let i = 0; i < 8; ++i) {
        binArr2[vertconv[i]] = binArr[i]; 
    }
    // console.log(binArr2)

    let d = 0
    for(let i = 7; i >= 0; --i) {
        d <<= 1;
        d |= binArr2[i];
    }

    // console.log(l, toBin(l), d, toBin(d));

    triTable2[d] = triTable[l].map(x => x);
}

// console.log(triTable2)

let str = "const triTable = array<vec3u, 1280>(\n";

for(let l = 0; l < 256; l++) {
    // console.log(triTable2[l])
    str += "/*" + l + "*/ ";
    // str += "/*" + l + "*/" + "["

    for(let tri = 0; tri < 5; tri++) {
        str += "vec3u(";
        for(let i = 0; i < 3; ++i) {
            let a = (triTable2[l][3*tri+i] ?? "inv");
            a = (a == -1) ? 'inv' : a;
            str += " " + a + ",";
        }
        str += "),";
    }

    
    str += "\n";

}
str += ");"

const table = [
/*0*/[ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*1*/[ 0, 8, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*2*/[ 0, 5, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*3*/[ 8, 4, 9, 9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*4*/[ 1, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*5*/[ 10, 1, 8, 8, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*6*/[ 1, 4, 10, 0, 5, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*7*/[ 9, 1, 5, 9, 10, 1, 9, 8, 10, -1, -1, -1, -1, -1, -1, -1,],
/*8*/[ 5, 1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*9*/[ 5, 1, 11, 4, 0, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*10*/[ 1, 11, 0, 0, 11, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*11*/[ 11, 4, 1, 11, 8, 4, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1,],
/*12*/[ 4, 10, 5, 5, 10, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*13*/[ 8, 5, 0, 8, 11, 5, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1,],
/*14*/[ 10, 0, 4, 10, 9, 0, 10, 11, 9, -1, -1, -1, -1, -1, -1, -1,],
/*15*/[ 10, 11, 8, 8, 11, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*16*/[ 2, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*17*/[ 4, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*18*/[ 8, 2, 6, 9, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*19*/[ 6, 9, 2, 6, 5, 9, 6, 4, 5, -1, -1, -1, -1, -1, -1, -1,],
/*20*/[ 4, 10, 1, 6, 8, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*21*/[ 1, 6, 10, 1, 2, 6, 1, 0, 2, -1, -1, -1, -1, -1, -1, -1,],
/*22*/[ 0, 5, 9, 4, 10, 1, 6, 8, 2, -1, -1, -1, -1, -1, -1, -1,],
/*23*/[ 10, 1, 6, 6, 1, 2, 2, 1, 5, 2, 5, 9, -1, -1, -1, -1,],
/*24*/[ 5, 1, 11, 6, 8, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*25*/[ 2, 6, 0, 0, 6, 4, 11, 5, 1, -1, -1, -1, -1, -1, -1, -1,],
/*26*/[ 1, 11, 0, 0, 11, 9, 6, 8, 2, -1, -1, -1, -1, -1, -1, -1,],
/*27*/[ 11, 9, 1, 9, 2, 6, 1, 9, 6, 1, 6, 4, -1, -1, -1, -1,],
/*28*/[ 11, 5, 10, 10, 5, 4, 2, 6, 8, -1, -1, -1, -1, -1, -1, -1,],
/*29*/[ 2, 6, 10, 2, 10, 5, 10, 11, 5, 0, 2, 5, -1, -1, -1, -1,],
/*30*/[ 2, 6, 8, 10, 0, 4, 10, 9, 0, 10, 11, 9, -1, -1, -1, -1,],
/*31*/[ 2, 6, 9, 6, 10, 9, 10, 11, 9, -1, -1, -1, -1, -1, -1, -1,],
/*32*/[ 9, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*33*/[ 0, 8, 4, 2, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*34*/[ 7, 2, 5, 5, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*35*/[ 4, 2, 8, 4, 7, 2, 4, 5, 7, -1, -1, -1, -1, -1, -1, -1,],
/*36*/[ 1, 4, 10, 2, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*37*/[ 10, 1, 8, 8, 1, 0, 7, 2, 9, -1, -1, -1, -1, -1, -1, -1,],
/*38*/[ 7, 2, 5, 5, 2, 0, 10, 1, 4, -1, -1, -1, -1, -1, -1, -1,],
/*39*/[ 7, 2, 8, 7, 8, 1, 8, 10, 1, 5, 7, 1, -1, -1, -1, -1,],
/*40*/[ 9, 7, 2, 11, 5, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*41*/[ 5, 1, 11, 0, 8, 4, 2, 9, 7, -1, -1, -1, -1, -1, -1, -1,],
/*42*/[ 2, 11, 7, 2, 1, 11, 2, 0, 1, -1, -1, -1, -1, -1, -1, -1,],
/*43*/[ 7, 2, 11, 11, 2, 1, 1, 2, 8, 1, 8, 4, -1, -1, -1, -1,],
/*44*/[ 4, 10, 5, 5, 10, 11, 2, 9, 7, -1, -1, -1, -1, -1, -1, -1,],
/*45*/[ 7, 2, 9, 8, 5, 0, 8, 11, 5, 8, 10, 11, -1, -1, -1, -1,],
/*46*/[ 10, 11, 4, 11, 7, 2, 4, 11, 2, 4, 2, 0, -1, -1, -1, -1,],
/*47*/[ 7, 2, 11, 2, 8, 11, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1,],
/*48*/[ 6, 8, 7, 7, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*49*/[ 7, 0, 9, 7, 4, 0, 7, 6, 4, -1, -1, -1, -1, -1, -1, -1,],
/*50*/[ 5, 8, 0, 5, 6, 8, 5, 7, 6, -1, -1, -1, -1, -1, -1, -1,],
/*51*/[ 4, 5, 6, 6, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*52*/[ 9, 7, 8, 8, 7, 6, 1, 4, 10, -1, -1, -1, -1, -1, -1, -1,],
/*53*/[ 7, 6, 9, 6, 10, 1, 9, 6, 1, 9, 1, 0, -1, -1, -1, -1,],
/*54*/[ 10, 1, 4, 5, 8, 0, 5, 6, 8, 5, 7, 6, -1, -1, -1, -1,],
/*55*/[ 10, 1, 6, 1, 5, 6, 5, 7, 6, -1, -1, -1, -1, -1, -1, -1,],
/*56*/[ 6, 8, 7, 7, 8, 9, 1, 11, 5, -1, -1, -1, -1, -1, -1, -1,],
/*57*/[ 1, 11, 5, 7, 0, 9, 7, 4, 0, 7, 6, 4, -1, -1, -1, -1,],
/*58*/[ 6, 8, 0, 6, 0, 11, 0, 1, 11, 7, 6, 11, -1, -1, -1, -1,],
/*59*/[ 1, 11, 4, 11, 7, 4, 7, 6, 4, -1, -1, -1, -1, -1, -1, -1,],
/*60*/[ 4, 10, 11, 4, 11, 5, 6, 8, 7, 8, 9, 7, -1, -1, -1, -1,],
/*61*/[ 11, 6, 10, 7, 6, 11, 9, 5, 0, -1, -1, -1, -1, -1, -1, -1,],
/*62*/[ 6, 11, 7, 10, 11, 6, 4, 8, 0, -1, -1, -1, -1, -1, -1, -1,],
/*63*/[ 11, 6, 10, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*64*/[ 3, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*65*/[ 10, 6, 3, 8, 4, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*66*/[ 3, 10, 6, 0, 5, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*67*/[ 5, 9, 4, 4, 9, 8, 3, 10, 6, -1, -1, -1, -1, -1, -1, -1,],
/*68*/[ 6, 3, 4, 4, 3, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*69*/[ 3, 8, 6, 3, 0, 8, 3, 1, 0, -1, -1, -1, -1, -1, -1, -1,],
/*70*/[ 6, 3, 4, 4, 3, 1, 9, 0, 5, -1, -1, -1, -1, -1, -1, -1,],
/*71*/[ 9, 8, 5, 8, 6, 3, 5, 8, 3, 5, 3, 1, -1, -1, -1, -1,],
/*72*/[ 3, 10, 6, 1, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*73*/[ 1, 11, 5, 10, 6, 3, 8, 4, 0, -1, -1, -1, -1, -1, -1, -1,],
/*74*/[ 9, 0, 11, 11, 0, 1, 6, 3, 10, -1, -1, -1, -1, -1, -1, -1,],
/*75*/[ 6, 3, 10, 11, 4, 1, 11, 8, 4, 11, 9, 8, -1, -1, -1, -1,],
/*76*/[ 5, 3, 11, 5, 6, 3, 5, 4, 6, -1, -1, -1, -1, -1, -1, -1,],
/*77*/[ 6, 3, 8, 8, 3, 0, 0, 3, 11, 0, 11, 5, -1, -1, -1, -1,],
/*78*/[ 6, 3, 11, 6, 11, 0, 11, 9, 0, 4, 6, 0, -1, -1, -1, -1,],
/*79*/[ 6, 3, 8, 3, 11, 8, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1,],
/*80*/[ 8, 2, 10, 10, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*81*/[ 0, 10, 4, 0, 3, 10, 0, 2, 3, -1, -1, -1, -1, -1, -1, -1,],
/*82*/[ 3, 10, 2, 2, 10, 8, 5, 9, 0, -1, -1, -1, -1, -1, -1, -1,],
/*83*/[ 3, 10, 4, 3, 4, 9, 4, 5, 9, 2, 3, 9, -1, -1, -1, -1,],
/*84*/[ 2, 4, 8, 2, 1, 4, 2, 3, 1, -1, -1, -1, -1, -1, -1, -1,],
/*85*/[ 1, 0, 3, 3, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*86*/[ 5, 9, 0, 2, 4, 8, 2, 1, 4, 2, 3, 1, -1, -1, -1, -1,],
/*87*/[ 5, 9, 1, 9, 2, 1, 2, 3, 1, -1, -1, -1, -1, -1, -1, -1,],
/*88*/[ 8, 2, 10, 10, 2, 3, 5, 1, 11, -1, -1, -1, -1, -1, -1, -1,],
/*89*/[ 11, 5, 1, 0, 10, 4, 0, 3, 10, 0, 2, 3, -1, -1, -1, -1,],
/*90*/[ 8, 2, 3, 8, 3, 10, 9, 0, 11, 0, 1, 11, -1, -1, -1, -1,],
/*91*/[ 3, 9, 2, 11, 9, 3, 1, 10, 4, -1, -1, -1, -1, -1, -1, -1,],
/*92*/[ 5, 4, 11, 4, 8, 2, 11, 4, 2, 11, 2, 3, -1, -1, -1, -1,],
/*93*/[ 11, 5, 3, 5, 0, 3, 0, 2, 3, -1, -1, -1, -1, -1, -1, -1,],
/*94*/[ 9, 3, 11, 2, 3, 9, 8, 0, 4, -1, -1, -1, -1, -1, -1, -1,],
/*95*/[ 9, 3, 11, 2, 3, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*96*/[ 6, 3, 10, 7, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*97*/[ 8, 4, 0, 6, 3, 10, 7, 2, 9, -1, -1, -1, -1, -1, -1, -1,],
/*98*/[ 0, 5, 2, 2, 5, 7, 10, 6, 3, -1, -1, -1, -1, -1, -1, -1,],
/*99*/[ 3, 10, 6, 4, 2, 8, 4, 7, 2, 4, 5, 7, -1, -1, -1, -1,],
/*100*/[ 1, 4, 3, 3, 4, 6, 9, 7, 2, -1, -1, -1, -1, -1, -1, -1,],
/*101*/[ 9, 7, 2, 3, 8, 6, 3, 0, 8, 3, 1, 0, -1, -1, -1, -1,],
/*102*/[ 6, 3, 1, 6, 1, 4, 7, 2, 5, 2, 0, 5, -1, -1, -1, -1,],
/*103*/[ 7, 1, 5, 3, 1, 7, 6, 2, 8, -1, -1, -1, -1, -1, -1, -1,],
/*104*/[ 7, 2, 9, 3, 10, 6, 1, 11, 5, -1, -1, -1, -1, -1, -1, -1,],
/*105*/[ 0, 8, 4, 1, 11, 5, 6, 3, 10, 7, 2, 9, -1, -1, -1, -1,],
/*106*/[ 10, 6, 3, 2, 11, 7, 2, 1, 11, 2, 0, 1, -1, -1, -1, -1,],
/*107*/[ 4, 1, 10, 11, 7, 3, 8, 6, 2, -1, -1, -1, -1, -1, -1, -1,],
/*108*/[ 2, 9, 7, 5, 3, 11, 5, 6, 3, 5, 4, 6, -1, -1, -1, -1,],
/*109*/[ 5, 0, 9, 8, 6, 2, 11, 7, 3, -1, -1, -1, -1, -1, -1, -1,],
/*110*/[ 6, 0, 4, 2, 0, 6, 7, 3, 11, -1, -1, -1, -1, -1, -1, -1,],
/*111*/[ 8, 6, 2, 11, 7, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*112*/[ 10, 7, 3, 10, 9, 7, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1,],
/*113*/[ 4, 0, 10, 10, 0, 3, 3, 0, 9, 3, 9, 7, -1, -1, -1, -1,],
/*114*/[ 10, 8, 3, 8, 0, 5, 3, 8, 5, 3, 5, 7, -1, -1, -1, -1,],
/*115*/[ 3, 10, 7, 10, 4, 7, 4, 5, 7, -1, -1, -1, -1, -1, -1, -1,],
/*116*/[ 1, 4, 8, 1, 8, 7, 8, 9, 7, 3, 1, 7, -1, -1, -1, -1,],
/*117*/[ 9, 7, 0, 7, 3, 0, 3, 1, 0, -1, -1, -1, -1, -1, -1, -1,],
/*118*/[ 1, 7, 3, 5, 7, 1, 0, 4, 8, -1, -1, -1, -1, -1, -1, -1,],
/*119*/[ 1, 7, 3, 5, 7, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*120*/[ 5, 1, 11, 10, 7, 3, 10, 9, 7, 10, 8, 9, -1, -1, -1, -1,],
/*121*/[ 7, 3, 11, 10, 4, 1, 9, 5, 0, -1, -1, -1, -1, -1, -1, -1,],
/*122*/[ 1, 8, 0, 10, 8, 1, 3, 11, 7, -1, -1, -1, -1, -1, -1, -1,],
/*123*/[ 7, 3, 11, 4, 1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*124*/[ 9, 4, 8, 5, 4, 9, 11, 7, 3, -1, -1, -1, -1, -1, -1, -1,],
/*125*/[ 3, 11, 7, 0, 9, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*126*/[ 4, 8, 0, 11, 7, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*127*/[ 3, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*128*/[ 7, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*129*/[ 0, 8, 4, 3, 7, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*130*/[ 7, 11, 3, 5, 9, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*131*/[ 8, 4, 9, 9, 4, 5, 3, 7, 11, -1, -1, -1, -1, -1, -1, -1,],
/*132*/[ 11, 3, 7, 10, 1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*133*/[ 0, 8, 1, 1, 8, 10, 7, 11, 3, -1, -1, -1, -1, -1, -1, -1,],
/*134*/[ 11, 3, 7, 1, 4, 10, 0, 5, 9, -1, -1, -1, -1, -1, -1, -1,],
/*135*/[ 3, 7, 11, 9, 1, 5, 9, 10, 1, 9, 8, 10, -1, -1, -1, -1,],
/*136*/[ 3, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*137*/[ 3, 7, 1, 1, 7, 5, 8, 4, 0, -1, -1, -1, -1, -1, -1, -1,],
/*138*/[ 0, 7, 9, 0, 3, 7, 0, 1, 3, -1, -1, -1, -1, -1, -1, -1,],
/*139*/[ 3, 7, 9, 3, 9, 4, 9, 8, 4, 1, 3, 4, -1, -1, -1, -1,],
/*140*/[ 7, 10, 3, 7, 4, 10, 7, 5, 4, -1, -1, -1, -1, -1, -1, -1,],
/*141*/[ 8, 10, 0, 10, 3, 7, 0, 10, 7, 0, 7, 5, -1, -1, -1, -1,],
/*142*/[ 3, 7, 10, 10, 7, 4, 4, 7, 9, 4, 9, 0, -1, -1, -1, -1,],
/*143*/[ 3, 7, 10, 7, 9, 10, 9, 8, 10, -1, -1, -1, -1, -1, -1, -1,],
/*144*/[ 2, 6, 8, 3, 7, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*145*/[ 4, 0, 6, 6, 0, 2, 11, 3, 7, -1, -1, -1, -1, -1, -1, -1,],
/*146*/[ 9, 0, 5, 2, 6, 8, 3, 7, 11, -1, -1, -1, -1, -1, -1, -1,],
/*147*/[ 11, 3, 7, 6, 9, 2, 6, 5, 9, 6, 4, 5, -1, -1, -1, -1,],
/*148*/[ 10, 1, 4, 3, 7, 11, 2, 6, 8, -1, -1, -1, -1, -1, -1, -1,],
/*149*/[ 7, 11, 3, 1, 6, 10, 1, 2, 6, 1, 0, 2, -1, -1, -1, -1,],
/*150*/[ 1, 4, 10, 3, 7, 11, 8, 2, 6, 9, 0, 5, -1, -1, -1, -1,],
/*151*/[ 9, 2, 7, 6, 10, 3, 5, 11, 1, -1, -1, -1, -1, -1, -1, -1,],
/*152*/[ 5, 1, 7, 7, 1, 3, 8, 2, 6, -1, -1, -1, -1, -1, -1, -1,],
/*153*/[ 2, 6, 4, 2, 4, 0, 3, 7, 1, 7, 5, 1, -1, -1, -1, -1,],
/*154*/[ 6, 8, 2, 0, 7, 9, 0, 3, 7, 0, 1, 3, -1, -1, -1, -1,],
/*155*/[ 3, 4, 1, 6, 4, 3, 2, 7, 9, -1, -1, -1, -1, -1, -1, -1,],
/*156*/[ 8, 2, 6, 7, 10, 3, 7, 4, 10, 7, 5, 4, -1, -1, -1, -1,],
/*157*/[ 2, 5, 0, 7, 5, 2, 3, 6, 10, -1, -1, -1, -1, -1, -1, -1,],
/*158*/[ 0, 4, 8, 10, 3, 6, 9, 2, 7, -1, -1, -1, -1, -1, -1, -1,],
/*159*/[ 10, 3, 6, 9, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*160*/[ 11, 3, 9, 9, 3, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*161*/[ 11, 3, 9, 9, 3, 2, 4, 0, 8, -1, -1, -1, -1, -1, -1, -1,],
/*162*/[ 3, 5, 11, 3, 0, 5, 3, 2, 0, -1, -1, -1, -1, -1, -1, -1,],
/*163*/[ 3, 2, 11, 2, 8, 4, 11, 2, 4, 11, 4, 5, -1, -1, -1, -1,],
/*164*/[ 2, 9, 3, 3, 9, 11, 4, 10, 1, -1, -1, -1, -1, -1, -1, -1,],
/*165*/[ 0, 8, 10, 0, 10, 1, 2, 9, 3, 9, 11, 3, -1, -1, -1, -1,],
/*166*/[ 4, 10, 1, 3, 5, 11, 3, 0, 5, 3, 2, 0, -1, -1, -1, -1,],
/*167*/[ 10, 2, 8, 3, 2, 10, 11, 1, 5, -1, -1, -1, -1, -1, -1, -1,],
/*168*/[ 1, 9, 5, 1, 2, 9, 1, 3, 2, -1, -1, -1, -1, -1, -1, -1,],
/*169*/[ 8, 4, 0, 1, 9, 5, 1, 2, 9, 1, 3, 2, -1, -1, -1, -1,],
/*170*/[ 3, 2, 1, 1, 2, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*171*/[ 8, 4, 2, 4, 1, 2, 1, 3, 2, -1, -1, -1, -1, -1, -1, -1,],
/*172*/[ 2, 9, 5, 2, 5, 10, 5, 4, 10, 3, 2, 10, -1, -1, -1, -1,],
/*173*/[ 2, 10, 3, 8, 10, 2, 0, 9, 5, -1, -1, -1, -1, -1, -1, -1,],
/*174*/[ 4, 10, 0, 10, 3, 0, 3, 2, 0, -1, -1, -1, -1, -1, -1, -1,],
/*175*/[ 10, 2, 8, 3, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*176*/[ 8, 3, 6, 8, 11, 3, 8, 9, 11, -1, -1, -1, -1, -1, -1, -1,],
/*177*/[ 4, 0, 9, 4, 9, 3, 9, 11, 3, 6, 4, 3, -1, -1, -1, -1,],
/*178*/[ 6, 8, 3, 3, 8, 11, 11, 8, 0, 11, 0, 5, -1, -1, -1, -1,],
/*179*/[ 11, 3, 5, 3, 6, 5, 6, 4, 5, -1, -1, -1, -1, -1, -1, -1,],
/*180*/[ 1, 4, 10, 8, 3, 6, 8, 11, 3, 8, 9, 11, -1, -1, -1, -1,],
/*181*/[ 11, 0, 9, 1, 0, 11, 10, 3, 6, -1, -1, -1, -1, -1, -1, -1,],
/*182*/[ 5, 11, 1, 3, 6, 10, 0, 4, 8, -1, -1, -1, -1, -1, -1, -1,],
/*183*/[ 6, 10, 3, 5, 11, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*184*/[ 1, 3, 5, 3, 6, 8, 5, 3, 8, 5, 8, 9, -1, -1, -1, -1,],
/*185*/[ 4, 3, 6, 1, 3, 4, 5, 0, 9, -1, -1, -1, -1, -1, -1, -1,],
/*186*/[ 6, 8, 3, 8, 0, 3, 0, 1, 3, -1, -1, -1, -1, -1, -1, -1,],
/*187*/[ 4, 3, 6, 1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*188*/[ 4, 9, 5, 8, 9, 4, 6, 10, 3, -1, -1, -1, -1, -1, -1, -1,],
/*189*/[ 6, 10, 3, 9, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*190*/[ 3, 6, 10, 0, 4, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*191*/[ 6, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*192*/[ 10, 6, 11, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*193*/[ 7, 11, 6, 6, 11, 10, 0, 8, 4, -1, -1, -1, -1, -1, -1, -1,],
/*194*/[ 10, 6, 11, 11, 6, 7, 0, 5, 9, -1, -1, -1, -1, -1, -1, -1,],
/*195*/[ 10, 6, 7, 10, 7, 11, 8, 4, 9, 4, 5, 9, -1, -1, -1, -1,],
/*196*/[ 4, 11, 1, 4, 7, 11, 4, 6, 7, -1, -1, -1, -1, -1, -1, -1,],
/*197*/[ 0, 8, 6, 0, 6, 11, 6, 7, 11, 1, 0, 11, -1, -1, -1, -1,],
/*198*/[ 9, 0, 5, 4, 11, 1, 4, 7, 11, 4, 6, 7, -1, -1, -1, -1,],
/*199*/[ 7, 8, 6, 9, 8, 7, 5, 11, 1, -1, -1, -1, -1, -1, -1, -1,],
/*200*/[ 6, 1, 10, 6, 5, 1, 6, 7, 5, -1, -1, -1, -1, -1, -1, -1,],
/*201*/[ 0, 8, 4, 6, 1, 10, 6, 5, 1, 6, 7, 5, -1, -1, -1, -1,],
/*202*/[ 6, 7, 10, 7, 9, 0, 10, 7, 0, 10, 0, 1, -1, -1, -1, -1,],
/*203*/[ 8, 7, 9, 6, 7, 8, 10, 4, 1, -1, -1, -1, -1, -1, -1, -1,],
/*204*/[ 6, 7, 4, 4, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*205*/[ 0, 8, 5, 8, 6, 5, 6, 7, 5, -1, -1, -1, -1, -1, -1, -1,],
/*206*/[ 9, 0, 7, 0, 4, 7, 4, 6, 7, -1, -1, -1, -1, -1, -1, -1,],
/*207*/[ 7, 8, 6, 9, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*208*/[ 11, 2, 7, 11, 8, 2, 11, 10, 8, -1, -1, -1, -1, -1, -1, -1,],
/*209*/[ 11, 10, 7, 10, 4, 0, 7, 10, 0, 7, 0, 2, -1, -1, -1, -1,],
/*210*/[ 0, 5, 9, 11, 2, 7, 11, 8, 2, 11, 10, 8, -1, -1, -1, -1,],
/*211*/[ 5, 10, 4, 11, 10, 5, 7, 9, 2, -1, -1, -1, -1, -1, -1, -1,],
/*212*/[ 8, 2, 4, 4, 2, 1, 1, 2, 7, 1, 7, 11, -1, -1, -1, -1,],
/*213*/[ 7, 11, 2, 11, 1, 2, 1, 0, 2, -1, -1, -1, -1, -1, -1, -1,],
/*214*/[ 11, 1, 5, 4, 8, 0, 7, 9, 2, -1, -1, -1, -1, -1, -1, -1,],
/*215*/[ 2, 7, 9, 1, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*216*/[ 8, 2, 7, 8, 7, 1, 7, 5, 1, 10, 8, 1, -1, -1, -1, -1,],
/*217*/[ 5, 2, 7, 0, 2, 5, 4, 1, 10, -1, -1, -1, -1, -1, -1, -1,],
/*218*/[ 8, 1, 10, 0, 1, 8, 9, 2, 7, -1, -1, -1, -1, -1, -1, -1,],
/*219*/[ 10, 4, 1, 7, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*220*/[ 8, 2, 4, 2, 7, 4, 7, 5, 4, -1, -1, -1, -1, -1, -1, -1,],
/*221*/[ 5, 2, 7, 0, 2, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*222*/[ 4, 8, 0, 7, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*223*/[ 2, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*224*/[ 9, 6, 2, 9, 10, 6, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1,],
/*225*/[ 4, 0, 8, 9, 6, 2, 9, 10, 6, 9, 11, 10, -1, -1, -1, -1,],
/*226*/[ 10, 6, 2, 10, 2, 5, 2, 0, 5, 11, 10, 5, -1, -1, -1, -1,],
/*227*/[ 10, 5, 11, 4, 5, 10, 8, 6, 2, -1, -1, -1, -1, -1, -1, -1,],
/*228*/[ 4, 6, 1, 6, 2, 9, 1, 6, 9, 1, 9, 11, -1, -1, -1, -1,],
/*229*/[ 0, 11, 1, 9, 11, 0, 2, 8, 6, -1, -1, -1, -1, -1, -1, -1,],
/*230*/[ 0, 6, 2, 4, 6, 0, 1, 5, 11, -1, -1, -1, -1, -1, -1, -1,],
/*231*/[ 11, 1, 5, 2, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*232*/[ 10, 6, 1, 1, 6, 5, 5, 6, 2, 5, 2, 9, -1, -1, -1, -1,],
/*233*/[ 9, 5, 0, 1, 10, 4, 2, 8, 6, -1, -1, -1, -1, -1, -1, -1,],
/*234*/[ 10, 6, 1, 6, 2, 1, 2, 0, 1, -1, -1, -1, -1, -1, -1, -1,],
/*235*/[ 1, 10, 4, 2, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*236*/[ 2, 9, 6, 9, 5, 6, 5, 4, 6, -1, -1, -1, -1, -1, -1, -1,],
/*237*/[ 6, 2, 8, 5, 0, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*238*/[ 6, 0, 4, 2, 0, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*239*/[ 8, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*240*/[ 8, 9, 10, 10, 9, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*241*/[ 4, 0, 10, 0, 9, 10, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1,],
/*242*/[ 0, 5, 8, 5, 11, 8, 11, 10, 8, -1, -1, -1, -1, -1, -1, -1,],
/*243*/[ 5, 10, 4, 11, 10, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*244*/[ 1, 4, 11, 4, 8, 11, 8, 9, 11, -1, -1, -1, -1, -1, -1, -1,],
/*245*/[ 0, 11, 1, 9, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*246*/[ 11, 1, 5, 8, 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*247*/[ 11, 1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*248*/[ 5, 1, 9, 1, 10, 9, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1,],
/*249*/[ 10, 4, 1, 9, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*250*/[ 8, 1, 10, 0, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*251*/[ 10, 4, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*252*/[ 9, 4, 8, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*253*/[ 9, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*254*/[ 4, 8, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
/*255*/[ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,],
];


// console.log(str);
console.log(toArrBin(191))